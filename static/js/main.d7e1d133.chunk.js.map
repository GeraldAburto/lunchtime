{"version":3,"sources":["components/menu/menu.component.js","components/commensal/commensal.component.js","components/commensals/commensals.component.js","components/addme/addme.component.js","pages/today/today.page.js","components/navbar/navbar.component.js","components/calendar/calendar.component.js","pages/calendar/calendar.page.js","pages/login/login.page.js","App.js","serviceWorker.js","index.js"],"names":["Menu","menu","className","length","map","item","i","key","Commensal","id","avatar","name","food","handleOnRemove","src","alt","href","onClick","bind","Commensals","commensals","AddMe","props","handleOnChange","event","setState","target","value","handleOnSubmit","preventDefault","state","onAddMe","select","document","getElementById","M","FormSelect","init","this","onSubmit","onChange","disabled","defaultValue","type","React","Component","TodayPage","handleOnAddMe","currentUser","toast","html","push","splice","find","commensal","Navbar","to","Calendar","dates","localizer","momentLocalizer","moment","defaultDate","Date","defaultView","events","style","height","marginTop","CalendarPage","LoginPage","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7e1d133.chunk.js","sourcesContent":["import React from 'react';\n\nconst Menu = ({ menu }) => {\n    return (\n        <ul className=\"collection with-header\">\n            <li className=\"collection-header\"><h4>Today's menu</h4></li>\n            {\n                menu && menu.length > 0 ?\n                    menu.map((item, i) => (<li key={i} className='collection-item'> {item}</li>)) :\n                    <li className='collection-item'>Menu not available.</li>\n            }\n        </ul>\n    );\n};\n\nexport default Menu;","import React from 'react';\n\nconst Commensal = ({ id, avatar, name, food, handleOnRemove }) => {\n    return (\n        <li className=\"collection-item avatar\">\n            <img src={avatar} alt={name} className='circle' />\n            <span className='title'>{name}</span>\n            <p>\n                {food}\n            </p>\n            <a href='#!' onClick={handleOnRemove.bind(this, id)} className=\"secondary-content\"><i className=\"material-icons\">close</i></a>\n        </li>\n    );\n};\n\nexport default Commensal;","import React from 'react';\nimport Commensal from '../commensal/commensal.component';\n\nconst Commensals = ({ commensals, handleOnRemove }) => {\n\n    return (\n        <div>\n            <ul className=\"collection with-header\">\n                <li className=\"collection-header\"><h4>Commensals</h4></li>\n                {\n                    commensals && commensals.length > 0 ?\n                        commensals.map(({ avatar, name, food }, i) => <Commensal key={i} id={i} avatar={avatar} name={name} food={food} handleOnRemove={handleOnRemove} />) :\n                        <li className='collection-item'>Wow, such empty.</li>\n                }\n            </ul>\n        </div>\n    );\n};\n\nexport default Commensals;","import React from 'react';\nimport M from 'materialize-css/dist/js/materialize';\n\nclass AddMe extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        let { menu, onAddMe } = this.props;\n\n        this.state = {\n            menu,\n            onAddMe,\n            food: 'Menu was not available'\n        };\n    }\n\n    componentDidMount() {\n        let select = document.getElementById('menu');\n        M.FormSelect.init(select);\n    }\n\n    handleOnChange = (event) => {\n        this.setState({ food: event.target.value });\n    }\n\n    handleOnSubmit = (event) => {\n        event.preventDefault();\n\n        this.state.onAddMe(this.state.food);\n    }\n\n    render() {\n        let { menu, food } = this.state;\n        return (\n            <form onSubmit={this.handleOnSubmit}>\n                <div className=\"row\">\n                    <div className=\"col s6\">\n                        <div className=\"input-field\">\n                            <select name=\"menu\" id=\"menu\" value={food} onChange={this.handleOnChange}>\n                                <option value='Menu was not available' disabled defaultValue>Choose your food</option>\n                                {\n                                    menu && menu.length > 0 ?\n                                        menu.map((item, i) => (<option key={i} value={item}> {item}</option>)) :\n                                        null\n                                }\n                            </select>\n                        </div>\n                    </div>\n                    <div className=\"col s6\">\n                        <div className=\"input-field\">\n                            <button className=\"btn waves-effect waves-light\" type=\"submit\" name=\"action\">Add me\n                                <i className=\"material-icons right\">add</i>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </form>\n        );\n    };\n}\n\nexport default AddMe;","import React from 'react';\nimport M from 'materialize-css';\n\nimport Menu from '../../components/menu/menu.component';\nimport Commensals from '../../components/commensals/commensals.component';\nimport AddMe from '../../components/addme/addme.component';\n\nclass TodayPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            menu: [],\n            commensals: []\n        };\n    }\n\n    handleOnAddMe = (food) => {\n\n        if(!this.props.currentUser)\n            return M.toast({ html: '<span>Please <a href=\"/login\" className=\"btn-flat toast-action\">Sign in</a> to select your food</span>' });\n\n        let { commensals } = this.state,\n            { name, avatar } = this.props.currentUser;\n            \n        commensals.push({\n            name,\n            avatar,\n            food\n        });\n\n        this.setState({\n            commensals: commensals\n        });\n    }\n\n    handleOnRemove = (id) => {\n        let { commensals } = this.state;\n        commensals.splice(id, 1);\n        this.setState({ commensals: commensals });\n    }\n\n    render() {\n        let { menu, commensals } = this.state;\n        return (\n            <div className='row'>\n                <div className=\"col s4\">\n                    <Menu menu={menu} />\n                </div>\n                <div className=\"col s8\">\n                    <div className=\"row\">\n                        <div className=\"col s12\">\n                            <Commensals commensals={commensals} handleOnRemove={this.handleOnRemove} />\n                        </div>\n                        <div className=\"col s12\">\n                            {commensals.find(commensal => commensal.name === 'Gerald Aburto') ? null : <AddMe menu={menu} onAddMe={this.handleOnAddMe} />}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default TodayPage;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => {\n    return (\n        <nav>\n            <div className='nav-wrapper'>\n                <Link to='/' className='brand-logo'>KodeIn Lunch</Link>\n                <ul id='nav-mobile' className='right hide-on-med-and-down'>\n                    <li><Link to='/today'>Today</Link></li>\n                    <li><Link to='/calendar'>Calendar</Link></li>\n                    <li><Link to='/login'>Sing in</Link></li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React from 'react';\nimport { Calendar as BigCalendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport M from 'materialize-css';\n\nclass Calendar extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dates: [],\n            localizer: momentLocalizer(moment)\n        };\n    }\n\n    componentDidMount() {\n        if(!this.props.currentUser)\n            M.toast({ html: '<span>Please <a href=\"/login\" className=\"btn-flat toast-action\">Sign in</a> to see your history</span>' })\n    }\n\n    render() {\n        let { dates, localizer } = this.state;\n        return (\n            <BigCalendar\n                localizer={localizer}\n                defaultDate={new Date()}\n                defaultView='month'\n                events={dates}\n                style={{ height: '80vh', marginTop: '20px' }}\n            />\n        );\n    }\n\n}\n\nexport default Calendar;","import React from 'react';\nimport Calendar from '../../components/calendar/calendar.component';\n\nconst CalendarPage = () => {\n    return (\n        <Calendar />\n    );\n};\n\nexport default CalendarPage;","import React from 'react';\n\nconst LoginPage = () => {\n    return (\n        <h4>Login Page (coming soon)</h4>\n    );\n};\n\nexport default LoginPage;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport './App.css';\n\nimport TodayPage from './pages/today/today.page';\nimport Navbar from './components/navbar/navbar.component';\nimport CalendarPage from './pages/calendar/calendar.page';\nimport LoginPage from './pages/login/login.page';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navbar />\n      <div className='container'>\n        <Switch>\n          <Route exact path='/' component={TodayPage} />\n          <Route exact path='/today' component={TodayPage} />\n          <Route exact path='/calendar' component={CalendarPage} />\n          <Route exact path='/login' component={LoginPage} />\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<BrowserRouter>\n    <App />\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}